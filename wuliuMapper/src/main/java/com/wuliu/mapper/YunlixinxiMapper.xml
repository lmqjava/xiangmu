<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wuliu.mapper.YunlixinxiMapper" >
  <resultMap id="BaseResultMap" type="com.wuliu.pojo.Yunlixinxi" >
    <id column="ylxxid" property="ylxxid" jdbcType="INTEGER" />
    <result column="driverlicenseld" property="driverlicenseld" jdbcType="INTEGER" />
    <result column="pathtimeid" property="pathtimeid" jdbcType="INTEGER" />
    <result column="carnum" property="carnum" jdbcType="INTEGER" />
    <result column="cartel" property="cartel" jdbcType="VARCHAR" />
    <result column="ylxxmess" property="ylxxmess" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ylxxid, driverlicenseld, pathtimeid, carnum, cartel, ylxxmess
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.wuliu.pojo.YunlixinxiExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yunlixinxi
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from yunlixinxi
    where ylxxid = #{ylxxid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from yunlixinxi
    where ylxxid = #{ylxxid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.wuliu.pojo.YunlixinxiExample" >
    delete from yunlixinxi
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wuliu.pojo.Yunlixinxi" >
    insert into yunlixinxi (ylxxid, driverlicenseld, pathtimeid, 
      carnum, cartel, ylxxmess
      )
    values (#{ylxxid,jdbcType=INTEGER}, #{driverlicenseld,jdbcType=INTEGER}, #{pathtimeid,jdbcType=INTEGER}, 
      #{carnum,jdbcType=INTEGER}, #{cartel,jdbcType=VARCHAR}, #{ylxxmess,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wuliu.pojo.Yunlixinxi" >
    insert into yunlixinxi
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ylxxid != null" >
        ylxxid,
      </if>
      <if test="driverlicenseld != null" >
        driverlicenseld,
      </if>
      <if test="pathtimeid != null" >
        pathtimeid,
      </if>
      <if test="carnum != null" >
        carnum,
      </if>
      <if test="cartel != null" >
        cartel,
      </if>
      <if test="ylxxmess != null" >
        ylxxmess,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ylxxid != null" >
        #{ylxxid,jdbcType=INTEGER},
      </if>
      <if test="driverlicenseld != null" >
        #{driverlicenseld,jdbcType=INTEGER},
      </if>
      <if test="pathtimeid != null" >
        #{pathtimeid,jdbcType=INTEGER},
      </if>
      <if test="carnum != null" >
        #{carnum,jdbcType=INTEGER},
      </if>
      <if test="cartel != null" >
        #{cartel,jdbcType=VARCHAR},
      </if>
      <if test="ylxxmess != null" >
        #{ylxxmess,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wuliu.pojo.YunlixinxiExample" resultType="java.lang.Integer" >
    select count(*) from yunlixinxi
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update yunlixinxi
    <set >
      <if test="record.ylxxid != null" >
        ylxxid = #{record.ylxxid,jdbcType=INTEGER},
      </if>
      <if test="record.driverlicenseld != null" >
        driverlicenseld = #{record.driverlicenseld,jdbcType=INTEGER},
      </if>
      <if test="record.pathtimeid != null" >
        pathtimeid = #{record.pathtimeid,jdbcType=INTEGER},
      </if>
      <if test="record.carnum != null" >
        carnum = #{record.carnum,jdbcType=INTEGER},
      </if>
      <if test="record.cartel != null" >
        cartel = #{record.cartel,jdbcType=VARCHAR},
      </if>
      <if test="record.ylxxmess != null" >
        ylxxmess = #{record.ylxxmess,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update yunlixinxi
    set ylxxid = #{record.ylxxid,jdbcType=INTEGER},
      driverlicenseld = #{record.driverlicenseld,jdbcType=INTEGER},
      pathtimeid = #{record.pathtimeid,jdbcType=INTEGER},
      carnum = #{record.carnum,jdbcType=INTEGER},
      cartel = #{record.cartel,jdbcType=VARCHAR},
      ylxxmess = #{record.ylxxmess,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wuliu.pojo.Yunlixinxi" >
    update yunlixinxi
    <set >
      <if test="driverlicenseld != null" >
        driverlicenseld = #{driverlicenseld,jdbcType=INTEGER},
      </if>
      <if test="pathtimeid != null" >
        pathtimeid = #{pathtimeid,jdbcType=INTEGER},
      </if>
      <if test="carnum != null" >
        carnum = #{carnum,jdbcType=INTEGER},
      </if>
      <if test="cartel != null" >
        cartel = #{cartel,jdbcType=VARCHAR},
      </if>
      <if test="ylxxmess != null" >
        ylxxmess = #{ylxxmess,jdbcType=VARCHAR},
      </if>
    </set>
    where ylxxid = #{ylxxid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wuliu.pojo.Yunlixinxi" >
    update yunlixinxi
    set driverlicenseld = #{driverlicenseld,jdbcType=INTEGER},
      pathtimeid = #{pathtimeid,jdbcType=INTEGER},
      carnum = #{carnum,jdbcType=INTEGER},
      cartel = #{cartel,jdbcType=VARCHAR},
      ylxxmess = #{ylxxmess,jdbcType=VARCHAR}
    where ylxxid = #{ylxxid,jdbcType=INTEGER}
  </update>
</mapper>